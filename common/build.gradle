import org.gradle.plugins.ide.eclipse.model.SourceFolder
import org.gradle.plugins.ide.eclipse.model.Container

apply plugin: 'eclipse'
apply plugin: 'java'

version = '0.1'

group = "cz.mammahelp"

repositories {
	mavenCentral()
}

dependencies {
}

configurations {
	provided
	// all*.exclude group: 'com.android.support', module: 'support-v4'
	// all*.exclude group: 'com.google.android.gms', module: 'play-services'
}


eclipse.classpath.plusConfigurations += configurations.compile


eclipse {

	classpath {
		file {
		    beforeMerged { classpath -> 
		    	classpath.entries.clear()
		    }
			withXml {
			    def node = it.asNode()
			    // node.appendNode('classpathentry kind="src" path="src/main/java"')
			    // node.appendNode('classpathentry kind="output" path="target"')
			}	   
		    whenMerged {  cp -> 
		        cp.entries.findAll { it instanceof SourceFolder && it.path.startsWith("src/main/") }*.output = "target/main" 
		        cp.entries.findAll { it instanceof SourceFolder && it.path.startsWith("src/test/") }*.output = "target/test"
		        cp.entries.findAll { it instanceof Container && it.path.endsWith("JRE_CONTAINER") }*.exported = false 
		        // cp.entries.removeAll { it.kind == "output" }
		    }
		}
		defaultOutputDir = file('target')

	}

	project {
		natures 'org.springsource.ide.eclipse.gradle.core.nature',
				'org.eclipse.jdt.core.javanature',
				'org.eclipse.jdt.groovy.core.groovyNature'
				
		 buildCommand 'org.eclipse.jdt.core.javabuilder'
		name 'mammahelp-common'
	}
	

}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java","src/test/java"]
        }
    }
}

jar {
	manifest.attributes provider: 'gradle'
    manifest.attributes 'Implementation-Vendor-Id': 'hPa'
    manifest.attributes 'Implementation-Vendor': 'Petr Vran√≠k'
    manifest.attributes 'Implementation-Version': 1.0
}

buildscript {
	repositories { mavenCentral() }
	dependencies { classpath 'com.android.tools.build:gradle:0.11.+' }
}



